{
  enabled: true,
  timezone: 'Africa/Cairo',
  semanticCommits: 'enabled',
  dependencyDashboard: true,
  dependencyDashboardTitle: 'Renovate Dashboard',
  commitBody: 'Signed-off-by: Shady Fanous <shadyf@users.noreply.github.com>',
  suppressNotifications: [
    'prIgnoreNotification',
  ],
  rebaseWhen: 'conflicted',
  'helm-values': {
    managerFilePatterns: [
      '/cluster/.+\\.ya?ml$/',
    ],
  },
  kubernetes: {
    managerFilePatterns: [
      '/cluster/.+\\.yaml$/',
    ],
    ignorePaths: [
      'cluster/base/',
    ],
  },
  customManagers: [
    {
      customType: 'regex',
      managerFilePatterns: [
        '/./.+\\.yaml$/',
      ],
      matchStrings: [
        'registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n',
      ],
      datasourceTemplate: 'helm',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/cluster/crds/.+\\.yaml$/',
      ],
      matchStrings: [
        'registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/',
      ],
      datasourceTemplate: 'helm',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/cluster/.+\\.yaml$/',
      ],
      matchStrings: [
        'repository: ["\']?(?<depName>.*?)["\']?\\s*\\n.*tag: ["\']?(?<currentValue>.*?)["\']?',
      ],
      datasourceTemplate: 'docker',
    },
  ],
  packageRules: [
    {
      matchDatasources: [
        'helm',
      ],
      semanticCommitScope: 'charts',
      commitMessageTopic: '{{depName}}',
      commitMessageExtra: 'to {{{newValue}}}',
      separateMinorPatch: true,
      ignoreDeprecated: true,
    },
    {
      matchDatasources: [
        'docker',
      ],
      enabled: true,
      matchUpdateTypes: [
        'major',
        'minor',
        'patch',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      semanticCommitScope: 'images',
      commitMessageTopic: '{{depName}}',
      commitMessageExtra: 'to {{{newValue}}}',
      separateMinorPatch: true,
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'major',
      ],
      commitMessagePrefix: 'feat(images)!: ',
      labels: [
        'renovate/image',
        'dep/major',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'minor',
      ],
      semanticCommitType: 'feat',
      labels: [
        'renovate/image',
        'dep/minor',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'patch',
      ],
      semanticCommitType: 'fix',
      labels: [
        'renovate/image',
        'dep/patch',
      ],
    },
    {
      matchDatasources: [
        'helm',
      ],
      matchUpdateTypes: [
        'major',
      ],
      commitMessagePrefix: 'feat(charts)!: ',
      labels: [
        'renovate/helm',
        'dep/major',
      ],
    },
    {
      matchDatasources: [
        'helm',
      ],
      matchUpdateTypes: [
        'minor',
      ],
      semanticCommitType: 'feat',
      labels: [
        'renovate/helm',
        'dep/minor',
      ],
    },
    {
      matchDatasources: [
        'helm',
      ],
      matchUpdateTypes: [
        'patch',
      ],
      semanticCommitType: 'fix',
      labels: [
        'renovate/helm',
        'dep/patch',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      versioning: 'loose',
      matchPackageNames: [
        'linuxserver/plex',
        'syncthing/syncthing',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$',
      matchPackageNames: [
        'quay.io/oauth2-proxy/oauth2-proxy',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      versioning: 'regex:^version-v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$',
      matchPackageNames: [
        'ghcr.io/linuxserver/wireguard',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      enabled: false,
      matchPackageNames: [
        '/ghcr.io/shadyf/mb-frontend/',
        '/ghcr.io/shadyf/mb-backend/',
      ],
    },
    {
      description: [
        'Auto-merge container digests updates for trusted containers',
      ],
      matchDatasources: [
        'docker',
      ],
      automerge: true,
      automergeType: 'branch',
      matchUpdateTypes: [
        'minor',
        'patch',
      ],
      matchPackageNames: [
        '/ghcr.io/bjw-s/',
        '/ghcr.io/onedr0p/',
      ],
    },
  ],
}
