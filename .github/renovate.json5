{
  "enabled": true,
  "timezone": "Africa/Cairo",
  "semanticCommits": "enabled",
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "commitBody": "Signed-off-by: Shady Fanous <shadyf@users.noreply.github.com>",
  // Do not notify on closed unmerged PRs
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  // Do not rebase PRs
  "rebaseWhen": "conflicted",
  "helm-values": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.yaml$",
    ],
    "ignorePaths": [
      "cluster/base/",
    ],
  },
  "regexManagers": [
    {
      "fileMatch": [
        "./.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    // regexManager to read and process custom CRDs
    {
      "fileMatch": [
        "cluster/crds/.+\\.yaml$",
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/",
      ],
      "datasourceTemplate": "helm"
    }
  ],
  "packageRules": [
    // Setup datasources
    {
      "matchDatasources": [
        "helm"
      ],
      "semanticCommitScope": "charts",
      "commitMessageTopic": "{{depName}}",
      "commitMessageExtra": "to {{{newValue}}}",
      "separateMinorPatch": true,
      "ignoreDeprecated": true,
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "enabled": true,
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch"
      ],
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "semanticCommitScope": "images",
      "commitMessageTopic": "{{depName}}",
      "commitMessageExtra": "to {{{newValue}}}",
      "separateMinorPatch": true,
    },
    // Add labels according to package and update types
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "commitMessagePrefix": "feat(images)!: ",
      "labels": [
        "renovate/image",
        "dep/major"
      ],
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "semanticCommitType": "feat",
      "labels": [
        "renovate/image",
        "dep/minor"
      ],
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "semanticCommitType": "fix",
      "labels": [
        "renovate/image",
        "dep/patch"
      ],
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "commitMessagePrefix": "feat(charts)!: ",
      "labels": [
        "renovate/helm",
        "dep/major"
      ],
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "semanticCommitType": "feat",
      "labels": [
        "renovate/helm",
        "dep/minor"
      ],
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "semanticCommitType": "fix",
      "labels": [
        "renovate/helm",
        "dep/patch"
      ],
    },
    // custom version schemes
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "loose",
      "matchPackageNames": [
        "linuxserver/plex",
        "syncthing/syncthing"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      "matchPackageNames": [
        "quay.io/oauth2-proxy/oauth2-proxy"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^version-v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": [
        "ghcr.io/linuxserver/wireguard"
      ],
    },
    // Disable renovate for mb-frontend and mb-backend.
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackagePatterns": [
        "ghcr.io/shadyf/mb-frontend",
        "ghcr.io/shadyf/mb-backend"
      ],
      "enabled": false
    },
    // Automerge
    {
      "description": [
        "Auto-merge container digests updates for trusted containers"
      ],
      "matchDatasources": [
        "docker"
      ],
      "automerge": true,
      "automergeType": "branch",
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "matchPackagePatterns": [
        "ghcr.io/bjw-s",
        "ghcr.io/onedr0p"
      ]
    }
  ]
}
