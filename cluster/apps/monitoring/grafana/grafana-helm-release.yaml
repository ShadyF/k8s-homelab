apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 8.9.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    # https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
    env:
      # Env vars can be found here https://grafana.com/docs/grafana/latest/administration/configuration/
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_SECOND: "hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_MINUTE: "hh:mm a"
      GF_DATE_FORMATS_INTERVAL_HOUR: "DD/MM hh:mm a"
      GF_DATE_FORMATS_INTERVAL_DAY: "DD/MM"
      GF_DATE_FORMATS_INTERVAL_MONTH: "MM-YYYY"
      GF_DATE_FORMATS_INTERVAL_YEAR: "YYYY"
    admin:
      existingSecret: "grafana-secrets"
    persistence:
      enabled: false
    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      # Disable grafana from checking for newer versions of itself
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      # Disable login form (https://grafana.com/docs/grafana/latest/auth/overview/#basic-authentication)
      # TODO: https://stackoverflow.com/questions/33111835/how-to-set-up-grafana-so-that-no-password-is-necessary-to-view-dashboards
      auth.basic:
        disable_login_form: false
    ingress:
      enabled: true
      ingressClassName: "internal"
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.networking.svc.cluster.local/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/sign_in"
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "grafana.${SECRET_DOMAIN}"
    # Grafana Datatsources (https://grafana.com/docs/grafana/latest/administration/provisioning/#datasources)
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://prometheus-operated.monitoring.svc.cluster.local:9090
            isDefault: true
            jsonData:
              implementation: prometheus
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: 'grafana-dashboards-kubernetes'
            orgId: 1
            folder: 'Kubernetes'
            type: file
            disableDeletion: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: nginx
            orgId: 1
            folder: Nginx
            type: file
            disableDeletion: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/nginx
          - name: crowdsec
            orgId: 1
            folder: Crowdsec
            type: file
            disableDeletion: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/crowdsec
    dashboards:
      default:
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 33
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        flaresolverr:
          # renovate: depName="FlareSolverr"
          gnetId: 19363
          revision: 1
          datasource: Prometheus

      grafana-dashboards-kubernetes:
        k8s-system-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          token: ''
        k8s-system-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          token: ''
        k8s-views-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          token: ''
        k8s-views-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          token: ''
        k8s-views-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          token: ''
        k8s-views-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          token: ''
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus

      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Loki

      crowdsec:
        crowdsec-overview:
          url: https://raw.githubusercontent.com/crowdsecurity/grafana-dashboards/master/dashboards_v5/Crowdsec%20Overview.json
          datasource: Prometheus
        lapi-metrics:
          url: https://raw.githubusercontent.com/crowdsecurity/grafana-dashboards/master/dashboards_v5/LAPI%20Metrics.json
          datasource: Prometheus
        crowdsec-details-per-machine:
          url: https://raw.githubusercontent.com/crowdsecurity/grafana-dashboards/master/dashboards_v5/Crowdsec%20Details%20per%20Machine.json
          datasource: Prometheus
        crowdsec-insight:
          url: https://raw.githubusercontent.com/crowdsecurity/grafana-dashboards/master/dashboards_v5/Crowdsec%20Insight.json
          datasource: Prometheus

      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/12559/revisions
        nginx-dashboard:
          gnetId: 12559
          revision: 14
          datasource: Loki
    plugins:
      - grafana-worldmap-panel
    #      - natel-discrete-panel
    #      - pr0ps-trackmap-panel
    #      - grafana-piechart-panel
    #      - vonage-status-panel
    #      - grafana-clock-panel

    # Allows grafana to search for dashboards in configmap maps (the ones generated by kube-prometheus-stack)
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        # defaultDatasourceEnabled: false
      dashboards:
        enabled: true
        searchNamespace: ALL

    serviceMonitor:
      enabled: true
